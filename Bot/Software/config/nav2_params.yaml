amcl:  # Not needed since we are using RTAB-Map, but placeholder if used later
  ros__parameters:
    use_sim_time: false

map_server:
  ros__parameters:
    use_sim_time: false
    yaml_filename: ""

map_saver:
  ros__parameters:
    use_sim_time: false
    save_map_timeout: 5.0
    free_thresh: 0.25
    occupied_thresh: 0.65
    map_subscribe_transient_local: true

bt_navigator:
  ros__parameters:
    use_sim_time: false
    default_bt_xml_filename: "navigate_w_replanning_and_recovery.xml"
    global_frame: map
    robot_base_frame: base_link

controller_server:
  ros__parameters:
    use_sim_time: false
    controller_plugins: ["FollowPath"]
    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: false
      min_vel_x: 0.0
      max_vel_x: 0.4
      min_vel_theta: -1.5
      max_vel_theta: 1.5
      acc_lim_x: 0.5
      acc_lim_theta: 1.0
      decel_lim_x: -0.5
      decel_lim_theta: -1.0
      vx_samples: 20
      theta_samples: 20
      sim_time: 2.0
      linear_granularity: 0.05
      angular_granularity: 0.05
      xy_goal_tolerance: 0.2
      yaw_goal_tolerance: 0.1
      stop_time_buffer: 0.2
      critic_plugins: ["RotateToGoal", "ObstacleFootprint", "PathAlign", "GoalAlign"]
      PathAlign.scale: 32.0
      GoalAlign.scale: 24.0
      RotateToGoal.scale: 32.0
      ObstacleFootprint.scale: 0.02

planner_server:
  ros__parameters:
    use_sim_time: false
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.5

recoveries_server:
  ros__parameters:
    use_sim_time: false
    recovery_plugins: ["spin", "backup", "wait"]
    spin.plugin: "nav2_recoveries/Spin"
    backup.plugin: "nav2_recoveries/BackUp"
    wait.plugin: "nav2_recoveries/Wait"

behavior_server:
  ros__parameters:
    use_sim_time: false
    behavior_plugins: ["spin", "backup", "wait"]
    spin.plugin: "nav2_behaviors/Spin"
    backup.plugin: "nav2_behaviors/BackUp"
    wait.plugin: "nav2_behaviors/Wait"

local_costmap:
  ros__parameters:
    use_sim_time: false
    global_frame: odom
    robot_base_frame: base_link
    update_frequency: 5.0
    publish_frequency: 2.0
    resolution: 0.05
    robot_radius: 0.2  # adjust if using footprint
    plugins: ["obstacle_layer", "inflation_layer"]
    obstacle_layer:
      plugin: "nav2_costmap_2d::ObstacleLayer"
      enabled: true
      observation_sources: laser
      laser:
        topic: scan
        max_obstacle_height: 2.0
        clearing: true
        marking: true
        data_type: "LaserScan"
    inflation_layer:
      plugin: "nav2_costmap_2d::InflationLayer"
      inflation_radius: 0.5

global_costmap:
  ros__parameters:
    use_sim_time: false
    global_frame: map
    robot_base_frame: base_link
    update_frequency: 5.0
    publish_frequency: 2.0
    resolution: 0.05
    robot_radius: 0.2  # adjust if using footprint
    plugins: ["obstacle_layer", "inflation_layer"]
    obstacle_layer:
      plugin: "nav2_costmap_2d::ObstacleLayer"
      enabled: true
      observation_sources: laser
      laser:
        topic: scan
        max_obstacle_height: 2.0
        clearing: true
        marking: true
        data_type: "LaserScan"
    inflation_layer:
      plugin: "nav2_costmap_2d::InflationLayer"
      inflation_radius: 0.5

waypoint_follower:
  ros__parameters:
    use_sim_time: false
    loop_rate: 20
    stop_on_failure: false
